{"version":3,"sources":["actions/types.js","reducers/reducer.js","components/Nav.js","About.js","components/TodosPage.js","components/TodoItem.js","components/TodosList.js","Contact.js","App.js","reportWebVitals.js","index.js"],"names":["EDIT_TASK","CREATE_TASK","REMOVE_TASK","initialState","tasks","state","action","payload","type","map","task","id","Object","assign","params","concat","filter","Nav","props","className","to","activeClassName","About","TodosPage","statusHandler","event","setStatus","target","value","inputText","onChange","console","log","setInputText","placeholder","onClick","preventDefault","setTodos","todos","text","completed","uuidv4","TodoItem","todo","item","icon","faTrash","style","color","element","TodosList","filteredTodos","Contact","useState","setFirstName","setLastName","setEmail","setComments","rows","connect","status","setFilteredTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocalTodos","filterHandler","class","path","exact","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87941fdf.chunk.js","sourcesContent":["export const EDIT_TASK = \"EDIT_TASK\";\r\nexport const CREATE_TASK = \"CREATE_TASK\";\r\nexport const REMOVE_TASK = \"REMOVE_TASK\";","import { CREATE_TASK, EDIT_TASK, REMOVE_TASK } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nconst tasks = (state = { tasks: initialState }, action) => {\r\n    const { payload } = action;\r\n    switch(action.type) {\r\n        case EDIT_TASK : {\r\n            return {\r\n                tasks: state.tasks.map(task => {\r\n                    if(task.id === payload.id) {\r\n                        return Object.assign({}, task, payload.params);\r\n                    }\r\n                    return task;\r\n                }),\r\n            };            \r\n        }\r\n        case CREATE_TASK : {\r\n            return {\r\n                tasks: state.tasks.concat(action.payload)\r\n            };\r\n        }\r\n        case REMOVE_TASK : {\r\n            return {\r\n                tasks: state.tasks.filter(task => task.id !== action.id)\r\n            }\r\n        }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default tasks;","import React from 'react';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\n\r\nfunction Nav (props) {\r\n    return (\r\n        <div>\r\n            <div className={\"grid grid-cols-9 bg-blue-400 text-lg\"}>\r\n                <span className={\"col-span-3 flex justify-center py-2\"}>\r\n                    <NavLink to=\"/Project-3/about\" activeClassName=\"font-bold\">\r\n                        <span className={\"cursor-point text-white hover:underline\"}>About</span>\r\n                    </NavLink>\r\n                </span>\r\n                <span className={\"col-span-3 flex justify-center py-2\"}>\r\n                    <NavLink to=\"/Project-3/todos\" activeClassName=\"font-bold\">\r\n                        <span className={\"cursor-point text-white hover:underline\"}>Todos</span>\r\n                    </NavLink>\r\n                </span>\r\n                <span className={\"col-span-3 flex justify-center py-2\"}>\r\n                    <NavLink to=\"/Project-3/contact\" activeClassName=\"font-bold\">\r\n                        <span className={\"cursor-point text-white hover:underline\"}>Contact</span>\r\n                    </NavLink>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nfunction About (props) {\r\n    return (\r\n        <div className={\"grid grid-cols-12\"}>\r\n            <p className={\"pt-4 text-lg col-start-2 col-span-10\"}>\r\n                This web app is intended for users to build a \"todo\" list, \r\n                enabling users to display a list of their to-do items. Users may\r\n                mark their task as completed, filter the tasks to see only active or,\r\n                completed tasks, or to view tasks both active and completed.\r\n                Lastly, users may delete to-do item(s) at their discretion.\r\n            </p>\r\n            <p className={\"py-2 text-lg col-start-2 col-span-10\"}>\r\n                When ready, click the \"Todo\" tab to start creating your task list!\r\n            </p>\r\n            <p className={\"py-2 text-lg col-start-2 col-span-10\"}>\r\n                As for the Contact form, the page contains self-managed states that \r\n                users may view with a React Developer Tool extension. Take a moment to\r\n                view the four states present in the Contact page!\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React, {useState} from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst TodosPage = (props) => {\r\n    const inputTextHandler = (event) => {\r\n        console.log(event.target.value);\r\n        props.setInputText(event.target.value);\r\n        // if setInputText takes the place of the parameters, \r\n        // then props not needed\r\n    };\r\n    const submitTodoHandler = (event) => {\r\n        event.preventDefault();\r\n        props.setTodos([\r\n            ...props.todos, \r\n            {text: props.inputText, completed: false, id: uuidv4()}\r\n        ]);\r\n        props.setInputText(\"\");\r\n    }\r\n    const statusHandler = (event) => {\r\n        props.setStatus(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className={\"grid grid-cols-12 gap-3 border p-4 m-3 my-7 md:m-10\"}>\r\n                <input value={props.inputText} \r\n                onChange={inputTextHandler} \r\n                type=\"text\" \r\n                className={\"col-span-12 md:col-span-11 p-1 border\"}\r\n                placeholder={\"Task...\"}/>\r\n                <button onClick={submitTodoHandler} \r\n                type=\"submit\"\r\n                className={\"col-start-5 col-span-4 md:col-span-1 bg-blue-500 hover:bg-blue-700 text-white font-bold p-1 rounded cursor-pointer\"}>\r\n                    Add\r\n                </button>\r\n            </form>\r\n            <div className={\"grid grid-cols-12 mt-3\"}>\r\n                <button onClick={statusHandler} \r\n                value=\"All\"\r\n                className={\"col-span-4 bg-gray-400 hover:bg-gray-500 focus:bg-gray-500 text-white font-bold p-1\"}>\r\n                    All\r\n                </button>\r\n                <button onClick={statusHandler} \r\n                value=\"Active\"\r\n                className={\"col-span-4 bg-gray-400 hover:bg-gray-500 focus:bg-gray-500 text-white font-bold p-1\"}>\r\n                    Active\r\n                </button>\r\n                <button onClick={statusHandler} \r\n                value=\"Completed\"\r\n                className={\"col-span-4 bg-gray-400 hover:bg-gray-500 focus:bg-gray-500 text-white font-bold p-1\"}>\r\n                    Completed\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodosPage;\r\n\r\n// React-Redux\r\n// const TASKS_STATUSES = [\"Not Started\", \"Active\", \"Completed\"];\r\n//\r\n// function TodosPage (props) {\r\n//     const [form, showForm] = useState(false);\r\n//     const [todo, setTodo] = useState(\"\");\r\n//     const toggleButton = () => {\r\n//         showForm(!form);\r\n//     }\r\n//     const onChangeTodo = (event) => {\r\n//         setTodo(event.target.value);\r\n//     }\r\n//     const onCreateTask = (event) => {\r\n//         props.onCreateTask({\r\n//             todo\r\n//         });\r\n//         event.preventDefault();\r\n//         resetForm();\r\n//     }\r\n//     const resetForm = () => {\r\n//         setTodo(\"\")\r\n//         showForm(false);\r\n//     }\r\n//     const renderTaskLists = () => {\r\n//         const {tasks} = props;\r\n//         return TASKS_STATUSES.map((status, id) => {\r\n//             const statusTasks = tasks.filter(task => task.status === status);\r\n//             return (\r\n//                 <div key={id}>\r\n//                     <TodosList \r\n//                     key={status} \r\n//                     status={status} \r\n//                     tasks={statusTasks}\r\n//                     onStatusChange={props.onStatusChange}\r\n//                     onRemoveTask={props.onRemoveTask}/>\r\n//                 </div>\r\n//             )\r\n//         })\r\n//     }  \r\n//     return (\r\n//         <div>\r\n//             <div className={\"flex justify-center m-10\"}>\r\n//             <button onClick={toggleButton} \r\n//             className={\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-full\"}>\r\n//                 Add Todo</button>\r\n//             </div>\r\n//             {form && (\r\n//             // Test onSubmit on another element\r\n//             <form onSubmit={onCreateTask} className={\"border p-3 m-2 md:m-12\"}>\r\n//                 <div className={\"grid grid-cols-12 gap-x-4\"}>\r\n//                     <input type=\"text\" className={\"col-span-9 p-2 mr-5 border rounded w-full\"}\r\n//                     placeholder={\"Task...\"}\r\n//                     onChange={onChangeTodo}/>\r\n//                     <button className={\"col-span-3 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"} type=\"submit\">Add</button>\r\n//                 </div>\r\n//             </form>\r\n//             )}    \r\n//             <div className=\"break-words grid md:grid-cols-3 gap-4\">\r\n//                 {renderTaskLists()}\r\n//             </div>                                    \r\n//             <div className={\"mt-10\"}></div>\r\n//         </div>\r\n//     );\r\n// }\r\n// export default TodosPage;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst TodoItem = ({text, todo, todos, setTodos}) => {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(element => element.id !== todo.id));\r\n    };\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if(item.id === todo.id) {\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                };\r\n            }\r\n            return item;\r\n        }))\r\n    };\r\n\r\n    return (\r\n        <form>\r\n            <li className={\"grid grid-cols-9 gaps-3 p-4 bg-gray-200\"}>\r\n                <div className=\"flex justify-center items-center col-span-1\">\r\n                    <input onClick={completeHandler} \r\n                    type=\"checkbox\"\r\n                    className={\"cursor-pointer\"}></input>\r\n                </div>\r\n                <div className={\"flex items-center col-span-7 break-all font-semibold\"}>\r\n                    <span className={todo.completed ? \"line-through\" : \"\"}>\r\n                        {text}\r\n                    </span>\r\n                </div>\r\n                <div className={\"flex justify-center col-span-1\"}>\r\n                    <span className={\"flex items-center\"}>\r\n                        <FontAwesomeIcon \r\n                        icon={faTrash}\r\n                        className=\"text-xl cursor-pointer\" \r\n                        style={{color: \"red\"}}\r\n                        onClick={deleteHandler}\r\n                        />\r\n                    </span>\r\n                </div>\r\n            </li>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoItem;\r\n\r\n// React-Redux\r\n// const TASKS_STATUSES = [\"Not Started\", \"Active\", \"Completed\"];\r\n// function TodoItem (props) {\r\n//     function onStatusChange(event) {\r\n//         props.onStatusChange(props.task.id, event.target.value)\r\n//     }\r\n//     function onRemoveTask() {\r\n//         props.onRemoveTask(props.task.id)\r\n//     }\r\n//     return (\r\n//         <>\r\n//             <div>\r\n//                 <form className={\"grid grid-cols-6 flex items-center p-2\"} onChange={onStatusChange}>\r\n//                     <select className={\"col-span-2 text-sm\"} defaultValue={props.task.status}>\r\n//                         {TASKS_STATUSES.map(status => (\r\n//                             <option className={\"text-xs\"} value={status} key={status}>{status}</option>\r\n//                         ))}\r\n//                     </select>\r\n//                     <li className={'col-span-3 p-2'}>\r\n//                         <span>{props.task.todo}</span>\r\n//                     </li>\r\n//                     <li className={'col-span-1 flex justify-end p-2'}>\r\n//                         <span>\r\n//                             <FontAwesomeIcon \r\n//                             icon={faTrash}\r\n//                             className=\"text-lg cursor-pointer\" \r\n//                             style={{color: \"red\"}}\r\n//                             onClick={() => onRemoveTask(props.task.id)}\r\n//                             />\r\n//                         </span>\r\n//                     </li>\r\n//                 </form>\r\n                \r\n//             </div>    \r\n//         </>\r\n//     )\r\n// }\r\n// export default TodoItem;","import React from 'react';\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodosList = ({todos, setTodos, filteredTodos}) => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {filteredTodos.map(todo => (\r\n                    <TodoItem todos={todos}  \r\n                    setTodos={setTodos} \r\n                    todo={todo}\r\n                    text={todo.text} \r\n                    key={todo.id}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodosList;\r\n\r\n// React-Redux\r\n// const TodosList = (props) => {\r\n//     return (\r\n//         <div className={\"bg-gray-200\"}>\r\n//             <ul>\r\n//                 <div className={\"flex justify-center text-lg font-bold bg-gray-400\"}>\r\n//                     {props.status}\r\n//                 </div>\r\n//                 {props.tasks.map(task => (\r\n//                     <TodoItem key={task.id} \r\n//                     task={task} \r\n//                     onStatusChange={props.onStatusChange}\r\n//                     onRemoveTask={props.onRemoveTask}/>    \r\n//                 ))}               \r\n//             </ul>\r\n//         </div>\r\n//     )\r\n// }\r\n// export default TodosList;","import React, {useState} from 'react';\r\n\r\nfunction Contact (props) {\r\n    \r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [comments, setComments] = useState(\"\");\r\n\r\n    const onChangeFirstName = (event) => {\r\n        setFirstName(event.target.value);\r\n    }\r\n    const onChangeLastName = (event) => {\r\n        setLastName(event.target.value);\r\n    }\r\n    const onChangeEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const onChangeComments = (event) => {\r\n        setComments(event.target.value);\r\n    }\r\n    return (\r\n        <div>\r\n            <form className={\"border p-3 m-4 md:m-12 lg:m-16 xl:m-20\"}>\r\n                <div className={\"grid grid-cols-12 gap-3\"}>\r\n                    <span className={\"font-bold col-span-12\"}>First Name</span>\r\n                    <input type=\"text\" \r\n                    className={\"col-span-12 p-2 border rounded w-full\"}\r\n                    placeholder={\"First Name\"}\r\n                    onChange={onChangeFirstName}/>\r\n                    <span className={\"font-bold col-span-12\"}>Last Name</span>\r\n                    <input type=\"text\" \r\n                    className={\"col-span-12 p-2 border rounded w-full\"}\r\n                    placeholder={\"Last Name\"}\r\n                    onChange={onChangeLastName}/>\r\n                    <span className={\"font-bold col-span-12\"}>Email</span>\r\n                    <input type=\"email\" \r\n                    className={\"col-span-12 p-2 mr-5 border rounded w-full\"}\r\n                    placeholder={\"Email\"}\r\n                    onChange={onChangeEmail}/>\r\n                    <span className={\"font-bold col-span-12\"}>Comments</span>\r\n                    <textarea rows='4' \r\n                    className={\"col-span-12 p-2 mr-5 border rounded w-full\"}\r\n                    placeholder={\"What would you like to say?\"}\r\n                    onChange={onChangeComments}/>\r\n                    <button type=\"submit\" className={\"col-span-4 md:col-span-2 xl:col-span-1 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"}>Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","import './App.css';\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Nav from \"./components/Nav\";\r\nimport \"antd/dist/antd.css\";\r\nimport {createTask, editTask, removeTask} from \"./actions/main\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport About from \"./About\"\r\nimport TodosPage from \"./components/TodosPage\";\r\nimport TodosList from \"./components/TodosList\";\r\nimport Contact from \"./Contact\";\r\n\r\nfunction App(props) {\r\n\r\n  // React-Redux\r\n  // const onStatusChange = (id, status) => {\r\n  //   props.dispatch(editTask(id, {status}))\r\n  // }\r\n\r\n  // const onCreateTask = ({todo}) => {\r\n  //   props.dispatch(createTask({todo}));\r\n  // }\r\n\r\n  // const onRemoveTask = (id) => {\r\n  //   props.dispatch(removeTask(id))\r\n  // }\r\n\r\n  // React Hooks\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [status,setStatus] = useState(\"All\");\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n\r\n  const filterHandler = () => {\r\n    switch(status) {\r\n      case \"Completed\":\r\n        setFilteredTodos(todos.filter((todo) => todo.completed === true))\r\n        break;\r\n      case \"Active\":\r\n        setFilteredTodos(todos.filter((todo) => todo.completed === false))\r\n        break;\r\n      default:\r\n        setFilteredTodos(todos);\r\n        break;\r\n    }\r\n  }\r\n\r\n  const saveLocalTodos = () => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  };\r\n  const getLocalTodos = () => {\r\n    if(localStorage.getItem(\"todos\") === null) {\r\n      localStorage.setItem(\"todos\", JSON.stringify([]));\r\n    } \r\n    else {\r\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\r\n      setTodos(todoLocal);\r\n    }\r\n  };\r\n\r\n  useEffect (() => {\r\n    getLocalTodos();\r\n  }, []);\r\n\r\n  useEffect (() => {\r\n    filterHandler();\r\n    saveLocalTodos();\r\n  }, [todos, status]);\r\n\r\n  return (\r\n    <Router>\r\n      <p class=\"flex justify-center md:justify-start p-2 m-2 font-bold text-lg md:text-3xl\">\r\n        React/Redux Todo List App\r\n      </p>  \r\n      <Nav/>     \r\n      <Switch>\r\n        <Route path=\"/Project-3/about\">\r\n          <About/>\r\n        </Route>\r\n        <Route path=\"/Project-3/todos\">\r\n          \r\n          {/* Primarily React */}\r\n          <TodosPage inputText={inputText} \r\n          setInputText={setInputText} \r\n          todos={todos} \r\n          setTodos={setTodos}\r\n          status={status}\r\n          setStatus={setStatus}/>\r\n          <TodosList\r\n          todos={todos} \r\n          setTodos={setTodos}\r\n          filteredTodos={filteredTodos}/>\r\n          \r\n          {/* React Redux */}\r\n          {/* <TodosPage tasks={props.tasks} \r\n          onStatusChange={onStatusChange}\r\n          onCreateTask={onCreateTask}\r\n          onRemoveTask={onRemoveTask}/> */}\r\n          \r\n        </Route>\r\n        <Redirect exact from= \"/\" to=\"/Project-3/todos\"/>\r\n        <Redirect exact from= \"/Project-3/\" to=\"/Project-3/todos\"/>\r\n        <Route path=\"/Project-3/contact\">\r\n          <Contact/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.tasks\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport tasks from \"./reducers/reducer\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst store = createStore(tasks);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}